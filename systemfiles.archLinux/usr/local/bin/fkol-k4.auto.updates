#!/bin/bash

#   File: /usr/local/bin/fkol-k4.auto.updates
#   Type:  bash script
#   Action: auto-updates an Arch-based system

#   Update official and AUR packages in an Arch Linux - based system.
#   Copyright (C) 2015 fkol-k4 fkolyvas@gmail.com

#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation version 2 of the License.

#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.

#   You should have received a copy of the GNU General Public License along
#   with this program; if not, write to the Free Software Foundation, Inc.,
#   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.


#   CLEAR CONSOLE
#   ===========================
clear

#   SCRIPT VARIABLES DEFINITION
#   ===========================
#   Our installation is inside a BTRFS subvolume. We need an extra mountpoint
#   for the system's partition so that we have the ability to manage our 
#   installation's subvolume (snapshot creation and deletion).
#   This mountpoint must have its own /etc/fstab entry.
#   The value below is an example.
ROOT_PARTITION_MOUNTPOINT="/mnt/Linux-HDD"
#   The name of the subvolume that our system uses for " / " mountpoint
#   The value below is an example.
SUBVOLUME_NAME=""

#   SNAPSHOTS
#   =========
#   1. Delete every snapshot except the last three taken.
for i in $(ls $ROOT_PARTITION_MOUNTPOINT/ | sort | grep $SUBVOLUME_NAME-snapshot-on- | head -n -3); do
    sudo btrfs subvolume delete "$ROOT_PARTITION_MOUNTPOINT/$i"
done
#   2. Create a new snapshot
sudo btrfs subvolume snapshot "$ROOT_PARTITION_MOUNTPOINT/$SUBVOLUME_NAME" "$ROOT_PARTITION_MOUNTPOINT/$SUBVOLUME_NAME-snapshot-on-$(date +%Y-%m-%d-%T)"
#   3. Sync disk I/O
sync


#   UPDATES
#   =======
#   Update official repository packages
sudo pacman -Syyvu
#   Update AUR packages
if [[ `which pacaur` ]]; then
    # use pacaur if installed
    pacaur --check
    pacaur --update
elif [[ `which yaourt` ]]; then
    # fallback to yaourt (if installed)
    yaourt -Sau
fi
#   Update file database
sudo updatedb
#   Sync disk I/O
sync


#   GRUB2 HANDLING
#   ==============
#   Update GRUB2 configuration
sudo grub-mkconfig -o /boot/grub/grub.cfg


#   USER NOTIFICATION && UPDATES SCRIPT EXIT
#   ========================================

function user_notify() {
    # notify user on terminal
    echo; echo; echo; echo
    echo "Updates script completed."
    echo
    echo "The terminal window will remain open for updates inspection."
    echo "Press any key to continue..."
    # notify user via notification (if possible)
    if [[ `which notify-send` ]]; then
        ICON="/usr/share/icons/fkol-k4/fkol-k4.donkey.svg"
        MESSAGE='Updates completed. Check your terminal!'
        if [ -f "$ICON" ]; then
            notify-send -i "$ICON" -t 4000 "$MESSAGE"
        else
            notify-send -t 4000 "$MESSAGE"
        fi
    fi
}
function user_wait() {
    # -s: do not echo input character
    # -n 1: read only 1 character (separate with space)
    read -s -n 1 key
    clear; echo; echo
    echo "The terminal window will close in four (4) seconds."
    echo "See you next time $USER..."
}

user_notify
user_wait
sleep 4
clear
exit
